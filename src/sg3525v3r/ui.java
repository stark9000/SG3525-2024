/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sg3525v3r;

import java.text.DecimalFormat;
import java.util.HashMap;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;

/**
 *
 * @author saliya
 */
public class ui extends javax.swing.JFrame {

    double CT_value;
    double RT_value;
    double VR_value;
    double RD_value;
    HashMap<String, Double> convertedValues = new HashMap<>();
    boolean VRSIM = false;
    double P_value;
//-------------------------
    HashMap<String, Double> convertedValuesSG = new HashMap<>();
    double FRQ_value;
    double RDSG_value;
    double CTSG_value;

    /**
     * Creates new form ui
     */
    public ui() {
        initComponents();
        initx();
    }

    final void initx() {
        String capacitanceText = CT.getText();//Assuming CT is the actual text field
        String fixedResistorText = RT.getText(); // Assuming RT is the actual text field
        String variableResistorText = VR.getText(); // Assuming VR is the actual text field
        String deadTimeResistorText = RD.getText(); // Assuming RD is the actual text field

// Combine validation and conversion with descriptive variable names
        convertedValues.put("Capacitance", validateAndConvert(capacitanceText));
        convertedValues.put("Fixed Resistor", validateAndConvert(fixedResistorText));
        convertedValues.put("Variable Resistor", validateAndConvert(variableResistorText));
        convertedValues.put("Dead Time Resistor", validateAndConvert(deadTimeResistorText));

// Use the converted values for calculations (assuming they are all valid)
        CT_value = convertedValues.get("Capacitance");
        RT_value = convertedValues.get("Fixed Resistor");
        VR_value = convertedValues.get("Variable Resistor");
        VRS.setMaximum((int) VR_value);
        RD_value = convertedValues.get("Dead Time Resistor");

        hz.setHorizontalAlignment(SwingConstants.CENTER);
        khz.setHorizontalAlignment(SwingConstants.CENTER);
        hzf.setHorizontalAlignment(SwingConstants.CENTER);
        khzf.setHorizontalAlignment(SwingConstants.CENTER);
        VRVL.setHorizontalAlignment(SwingConstants.CENTER);

        //--------------------------------------------------
        String FrequencyTextSG = DFH.getText();
        String CapacitanceTextSG = CTDF.getText();
        String DeadTimeResistorTextSG = RDDF.getText();

// Combine validation and conversion with descriptive variable names
        convertedValuesSG.put("Frequency", validateAndConvert(FrequencyTextSG));
        convertedValuesSG.put("Capacitance", validateAndConvert(CapacitanceTextSG));
        convertedValuesSG.put("Dead Time Resistor", validateAndConvert(DeadTimeResistorTextSG));

// Use the converted values for calculations (assuming they are all valid)
        FRQ_value = convertedValuesSG.get("Frequency");
        CTSG_value = convertedValuesSG.get("Capacitance");
        RDSG_value = convertedValuesSG.get("Dead Time Resistor");

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDesktopPane1 = new javax.swing.JDesktopPane();
        jLabel11 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        CT = new javax.swing.JTextField();
        RT = new javax.swing.JTextField();
        VR = new javax.swing.JTextField();
        RD = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        VRS = new javax.swing.JSlider();
        VRVL = new javax.swing.JLabel();
        VRSB = new javax.swing.JRadioButton();
        khz = new javax.swing.JLabel();
        hz = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        khzf = new javax.swing.JLabel();
        hzf = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel10 = new javax.swing.JLabel();
        DFH = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        CTDF = new javax.swing.JTextField();
        RTDF = new javax.swing.JTextField();
        RDDF = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JSeparator();
        jButton7 = new javax.swing.JButton();

        javax.swing.GroupLayout jDesktopPane1Layout = new javax.swing.GroupLayout(jDesktopPane1);
        jDesktopPane1.setLayout(jDesktopPane1Layout);
        jDesktopPane1Layout.setHorizontalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jDesktopPane1Layout.setVerticalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jLabel11.setText("jLabel11");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("SG3525-calc-2024");

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sg3525v3r/freq formula.png"))); // NOI18N

        jLabel2.setText("Timing Capacitance (nF) :");

        jLabel3.setText("Timing Resistance (Ω) :");

        jLabel4.setText("Variable Resistor (Ω) :");

        jLabel5.setText("Dead Time Resistance (Ω) :");

        CT.setText("100");

        RT.setText("270000");

        VR.setText("50000");

        RD.setText("470");

        jButton1.setText("Calc");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel6.setText("CT");

        jLabel7.setText("RT");

        jLabel8.setText("VR");

        jLabel9.setText("RD");

        VRS.setMaximum(0);
        VRS.setPaintLabels(true);
        VRS.setPaintTicks(true);
        VRS.setSnapToTicks(true);
        VRS.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                VRSStateChanged(evt);
            }
        });

        VRVL.setText("...");
        VRVL.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        VRSB.setText("VRS");
        VRSB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VRSBActionPerformed(evt);
            }
        });

        khz.setText("...");
        khz.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        hz.setText("...");
        hz.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jButton2.setText("Ex1");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Ex2");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        khzf.setText("...");
        khzf.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        hzf.setText("...");
        hzf.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jLabel10.setText("desired frequency (Hz): ");

        DFH.setText("50");

        jLabel12.setText("CT (nF) :");

        jLabel13.setText("RT (kΩ) :");

        jLabel14.setText("RD (Ω) :");

        CTDF.setEditable(false);
        CTDF.setText("100");
        CTDF.setDisabledTextColor(new java.awt.Color(0, 0, 0));

        RTDF.setEditable(false);
        RTDF.setText("0");
        RTDF.setDisabledTextColor(new java.awt.Color(0, 0, 0));

        RDDF.setEditable(false);
        RDDF.setText("470");
        RDDF.setDisabledTextColor(new java.awt.Color(0, 0, 0));

        jButton4.setText("Calc");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Ex1");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("Ex2");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setText("C");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(khz, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createSequentialGroup()
                            .addContainerGap()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(VRS, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jButton2)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(jButton3)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jButton1))
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                            .addComponent(jLabel5)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(RD, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE))
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                            .addGap(8, 8, 8)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(jLabel4)
                                                    .addGap(9, 9, 9))
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(jLabel3)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(jLabel2)
                                                    .addGap(10, 10, 10)))
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(CT)
                                                .addComponent(RT)
                                                .addComponent(VR, javax.swing.GroupLayout.DEFAULT_SIZE, 126, Short.MAX_VALUE))
                                            .addGap(0, 0, Short.MAX_VALUE)))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel6)
                                        .addComponent(jLabel7)
                                        .addComponent(jLabel9)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel8)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(VRSB))))
                                .addComponent(VRVL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addComponent(hz, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(hzf, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 337, Short.MAX_VALUE)
                        .addComponent(khzf, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(67, 67, 67)
                        .addComponent(jLabel1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(DFH)
                            .addComponent(CTDF)
                            .addComponent(RTDF)
                            .addComponent(RDDF)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                        .addComponent(jButton7)
                        .addGap(18, 18, 18)
                        .addComponent(jButton4))
                    .addComponent(jSeparator3))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator2)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(CT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(RT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(VR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8)
                            .addComponent(VRSB))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(VRS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(7, 7, 7)
                        .addComponent(VRVL)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(RD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1)
                            .addComponent(jButton2)
                            .addComponent(jButton3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(hz)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(khz)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(hzf)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(khzf)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(DFH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(CTDF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(RTDF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14)
                            .addComponent(RDDF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton4)
                            .addComponent(jButton5)
                            .addComponent(jButton6)
                            .addComponent(jButton7))
                        .addGap(18, 18, 18)
                        .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        OscillatorFrequencyCalculator OFC = new OscillatorFrequencyCalculator(0);
        // Define meaningful variable names for text fields
        String capacitanceText = CT.getText();//Assuming CT is the actual text field
        String fixedResistorText = RT.getText(); // Assuming RT is the actual text field
        String variableResistorText = VR.getText(); // Assuming VR is the actual text field
        String deadTimeResistorText = RD.getText(); // Assuming RD is the actual text field

// Combine validation and conversion with descriptive variable names
        convertedValues.put("Capacitance", validateAndConvert(capacitanceText));
        convertedValues.put("Fixed Resistor", validateAndConvert(fixedResistorText));
        convertedValues.put("Variable Resistor", validateAndConvert(variableResistorText));
        convertedValues.put("Dead Time Resistor", validateAndConvert(deadTimeResistorText));

// Use the converted values for calculations (assuming they are all valid)
        try {
            CT_value = convertedValues.get("Capacitance");
            RT_value = convertedValues.get("Fixed Resistor");
            VR_value = convertedValues.get("Variable Resistor");
            VRS.setMaximum((int) VR_value);
            RD_value = convertedValues.get("Dead Time Resistor");
        } catch (Exception e) {

        }
// Perform calculations using the converted values (replace with your actual logic)
// ...
// Function to perform validation and conversion (can be reused)
        if (VRSIM) {
            hz.setText(String.valueOf(OFC.calculateFrequency(CT_value, (RT_value + P_value), RD_value) + " - Hz"));
            khz.setText(String.valueOf((OFC.calculateFrequencyInKHz(CT_value, (RT_value + P_value), RD_value)) + " - Khz"));
            hzf.setText(formatResult(OFC.calculateFrequency(CT_value, (RT_value + P_value), RD_value)) + " - Hz");
            khzf.setText(formatResult(OFC.calculateFrequencyInKHz(CT_value, (RT_value + P_value), RD_value)) + " - Khz");
        } else {

            hz.setText(String.valueOf(OFC.calculateFrequency(CT_value, RT_value, RD_value) + " - Hz"));
            khz.setText(String.valueOf(OFC.calculateFrequencyInKHz(CT_value, RT_value, RD_value) + " - Khz"));
            hzf.setText(formatResult(OFC.calculateFrequency(CT_value, RT_value, RD_value)) + " - Hz");
            khzf.setText(formatResult(OFC.calculateFrequencyInKHz(CT_value, RT_value, RD_value)) + " - Khz");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void VRSStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_VRSStateChanged
        VRVL.setText(String.valueOf(VRS.getValue()) + " - Ω");
        P_value = VRS.getValue();
    }//GEN-LAST:event_VRSStateChanged

    private void VRSBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VRSBActionPerformed
        VRSIM = VRSB.isSelected();
    }//GEN-LAST:event_VRSBActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        CT.setText("100");
        RT.setText("270000");
        VR.setText("50000");
        RD.setText("470");
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        CT.setText("1");
        RT.setText("15000");
        VR.setText("0");
        RD.setText("22");
        //https://tahmidmc.blogspot.com/2013/01/using-sg3525-pwm-controller-explanation.html
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        SG3525ComponentCalculator SG = new SG3525ComponentCalculator();
        String FrequencyTextSG = DFH.getText();
        String CapacitanceTextSG = CTDF.getText();
        String DeadTimeResistorTextSG = RDDF.getText();

// Combine validation and conversion with descriptive variable names
        convertedValuesSG.put("Frequency", validateAndConvert(FrequencyTextSG));
        convertedValuesSG.put("Capacitance", validateAndConvert(CapacitanceTextSG));
        convertedValuesSG.put("Dead Time Resistor", validateAndConvert(DeadTimeResistorTextSG));

// Use the converted values for calculations (assuming they are all valid)
        try {
            FRQ_value = convertedValuesSG.get("Frequency");
            CTSG_value = convertedValuesSG.get("Capacitance");
            RDSG_value = convertedValuesSG.get("Dead Time Resistor");
        } catch (Exception e) {
        }
        //SG.calculateCT(FRQ_value, RTSG_value);

        RTDF.setText(String.valueOf(SG.calculateRT(FRQ_value, CTSG_value)));
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        CT.setText(String.valueOf(CTSG_value));
        RT.setText(RTDF.getText());
        RD.setText(String.valueOf(RDSG_value));
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        DFH.setText("50");
        CTDF.setText("100");
        RDDF.setText("470");
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        DFH.setText("94643.20");
        CTDF.setText("1");
        RDDF.setText("22");
    }//GEN-LAST:event_jButton6ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new ui().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField CT;
    private javax.swing.JTextField CTDF;
    private javax.swing.JTextField DFH;
    private javax.swing.JTextField RD;
    private javax.swing.JTextField RDDF;
    private javax.swing.JTextField RT;
    private javax.swing.JTextField RTDF;
    private javax.swing.JTextField VR;
    private javax.swing.JSlider VRS;
    private javax.swing.JRadioButton VRSB;
    private javax.swing.JLabel VRVL;
    private javax.swing.JLabel hz;
    private javax.swing.JLabel hzf;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JLabel khz;
    private javax.swing.JLabel khzf;
    // End of variables declaration//GEN-END:variables
public static boolean isNumberWithDecimal(String text) {
        // Regular expression for numbers with optional decimal point
        String regex = "^[-+]?[0-9]*\\.?[0-9]+$";
        return text.matches(regex);
    }

    private static Double validateAndConvert(String text) {
        if (isNumberWithDecimal(text)) {
            try {
                return Double.valueOf(text);
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "Invalid number format for " + text + ". Please enter only numbers with an optional decimal point.");
                return null; // Indicate conversion failure
            }
        } else {
            JOptionPane.showMessageDialog(null, "Invalid number format for " + text + ". Please enter only numbers with an optional decimal point.");
            return null; // Indicate conversion failure
        }
    }

    private String formatResult(double value) {
        DecimalFormat df = new DecimalFormat("#.00");
        return df.format(value);
    }

}
